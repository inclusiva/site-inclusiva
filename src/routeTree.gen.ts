/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MidiasImport } from './routes/midias'
import { Route as GaleriaImport } from './routes/galeria'
import { Route as EquipeImport } from './routes/equipe'
import { Route as IndexImport } from './routes/index'
import { Route as TurmasIndexImport } from './routes/turmas/index'
import { Route as TurmasTurmaIdImport } from './routes/turmas/$turmaId'

// Create/Update Routes

const MidiasRoute = MidiasImport.update({
  id: '/midias',
  path: '/midias',
  getParentRoute: () => rootRoute,
} as any)

const GaleriaRoute = GaleriaImport.update({
  id: '/galeria',
  path: '/galeria',
  getParentRoute: () => rootRoute,
} as any)

const EquipeRoute = EquipeImport.update({
  id: '/equipe',
  path: '/equipe',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TurmasIndexRoute = TurmasIndexImport.update({
  id: '/turmas/',
  path: '/turmas/',
  getParentRoute: () => rootRoute,
} as any)

const TurmasTurmaIdRoute = TurmasTurmaIdImport.update({
  id: '/turmas/$turmaId',
  path: '/turmas/$turmaId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/equipe': {
      id: '/equipe'
      path: '/equipe'
      fullPath: '/equipe'
      preLoaderRoute: typeof EquipeImport
      parentRoute: typeof rootRoute
    }
    '/galeria': {
      id: '/galeria'
      path: '/galeria'
      fullPath: '/galeria'
      preLoaderRoute: typeof GaleriaImport
      parentRoute: typeof rootRoute
    }
    '/midias': {
      id: '/midias'
      path: '/midias'
      fullPath: '/midias'
      preLoaderRoute: typeof MidiasImport
      parentRoute: typeof rootRoute
    }
    '/turmas/$turmaId': {
      id: '/turmas/$turmaId'
      path: '/turmas/$turmaId'
      fullPath: '/turmas/$turmaId'
      preLoaderRoute: typeof TurmasTurmaIdImport
      parentRoute: typeof rootRoute
    }
    '/turmas/': {
      id: '/turmas/'
      path: '/turmas'
      fullPath: '/turmas'
      preLoaderRoute: typeof TurmasIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/equipe': typeof EquipeRoute
  '/galeria': typeof GaleriaRoute
  '/midias': typeof MidiasRoute
  '/turmas/$turmaId': typeof TurmasTurmaIdRoute
  '/turmas': typeof TurmasIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/equipe': typeof EquipeRoute
  '/galeria': typeof GaleriaRoute
  '/midias': typeof MidiasRoute
  '/turmas/$turmaId': typeof TurmasTurmaIdRoute
  '/turmas': typeof TurmasIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/equipe': typeof EquipeRoute
  '/galeria': typeof GaleriaRoute
  '/midias': typeof MidiasRoute
  '/turmas/$turmaId': typeof TurmasTurmaIdRoute
  '/turmas/': typeof TurmasIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/equipe'
    | '/galeria'
    | '/midias'
    | '/turmas/$turmaId'
    | '/turmas'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/equipe' | '/galeria' | '/midias' | '/turmas/$turmaId' | '/turmas'
  id:
    | '__root__'
    | '/'
    | '/equipe'
    | '/galeria'
    | '/midias'
    | '/turmas/$turmaId'
    | '/turmas/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EquipeRoute: typeof EquipeRoute
  GaleriaRoute: typeof GaleriaRoute
  MidiasRoute: typeof MidiasRoute
  TurmasTurmaIdRoute: typeof TurmasTurmaIdRoute
  TurmasIndexRoute: typeof TurmasIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EquipeRoute: EquipeRoute,
  GaleriaRoute: GaleriaRoute,
  MidiasRoute: MidiasRoute,
  TurmasTurmaIdRoute: TurmasTurmaIdRoute,
  TurmasIndexRoute: TurmasIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/equipe",
        "/galeria",
        "/midias",
        "/turmas/$turmaId",
        "/turmas/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/equipe": {
      "filePath": "equipe.tsx"
    },
    "/galeria": {
      "filePath": "galeria.tsx"
    },
    "/midias": {
      "filePath": "midias.tsx"
    },
    "/turmas/$turmaId": {
      "filePath": "turmas/$turmaId.tsx"
    },
    "/turmas/": {
      "filePath": "turmas/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
